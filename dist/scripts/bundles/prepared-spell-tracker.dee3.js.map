{"version":3,"sources":["webpack:///./src/scripts/prepared-spell-tracker.js"],"names":["async","addPreparedSpellTracker","Hooks","on","app","html","data","actor","fromUuid","_id","spellDc","querySelector","tracker","document","createElement","classList","add","style","flex","border","spanPrep","appendChild","innerText","preparedSpells","sep","max","type","value","getFlag","addEventListener","ev","preventDefault","stopPropagation","val","Number","currentTarget","isNaN","setFlag","parentNode","insertBefore"],"mappings":";;;;6DAAeA,eAAeC,IAC7BC,MAAMC,GAAG,oBAAoBH,eAAgBI,EAAMC,EAAMC,GACxD,MAAMC,QAAcC,SAAS,SAASF,EAAKC,MAAME,KAC3CC,EAAUL,EAAK,GAAGM,cAAc,aACtC,IAAKD,EAAS,OACd,IAAIE,EAAUC,SAASC,cAAc,OACrCF,EAAQG,UAAUC,IAAI,eACtBJ,EAAQK,MAAMC,KAAO,IACrBN,EAAQK,MAAME,OAAS,OACvB,MAAMC,EAAWR,EAAQS,YAAYR,SAASC,cAAc,SAC5DM,EAASE,UAAY,oBAAoBhB,EAAKiB,eAC9CH,EAASL,UAAUC,IAAI,aAEvB,MAAMQ,EAAMZ,EAAQS,YAAYR,SAASC,cAAc,SACvDU,EAAIF,UAAY,MAChBE,EAAIT,UAAUC,IAAI,OAElB,MAAMS,EAAMb,EAAQS,YAAYR,SAASC,cAAc,UACvDW,EAAIC,KAAO,OACXD,EAAIE,MAAQpB,EAAMqB,QAAQ,OAAQ,sBAAwB,EAC1DH,EAAII,iBAAiB,UAAU7B,eAAe8B,GAC7CA,EAAGC,iBACHD,EAAGE,kBACH,MAAMC,EAAMC,OAAOJ,EAAGK,cAAcR,OACpC,OAAIS,MAAMH,IACTH,EAAGK,cAAcR,MAAQpB,EAAMqB,QAAQ,OAAQ,sBAAwB,GAChE,IAGRrB,EAAM8B,QAAQ,OAAQ,oBAAqBJ,IACpC,MAERvB,EAAQ4B,WAAWC,aAAa3B,EAASF,MAhC3C","file":"bundles/prepared-spell-tracker.dee3.js","sourcesContent":["export default async function addPreparedSpellTracker() {\n\tHooks.on('renderActorSheet', async function (app,  html, data) {\n\t\tconst actor = await fromUuid(`Actor.${data.actor._id}`);\n\t\tconst spellDc = html[0].querySelector('.spell-dc');\n\t\tif (!spellDc) return;\n\t\tlet tracker = document.createElement('div');\n\t\ttracker.classList.add('spell-slots');\n\t\ttracker.style.flex = '1';\n\t\ttracker.style.border = 'none';\n\t\tconst spanPrep = tracker.appendChild(document.createElement('span'));\n\t\tspanPrep.innerText = `prepared spells: ${data.preparedSpells}`;\n\t\tspanPrep.classList.add('spell-max');\n\n\t\tconst sep = tracker.appendChild(document.createElement('span'));\n\t\tsep.innerText = ' / ';\n\t\tsep.classList.add('sep');\n\n\t\tconst max = tracker.appendChild(document.createElement('input'));\n\t\tmax.type = 'text';\n\t\tmax.value = actor.getFlag('mess', 'maxPreparedSpells') || 0;\n\t\tmax.addEventListener('change', async function(ev) {\n\t\t\tev.preventDefault();\n\t\t\tev.stopPropagation();\n\t\t\tconst val = Number(ev.currentTarget.value);\n\t\t\tif (isNaN(val)) {\n\t\t\t\tev.currentTarget.value = actor.getFlag('mess', 'maxPreparedSpells') || 0;\n\t\t\t\treturn false;\n\t\t\t}\n\n\t\t\tactor.setFlag('mess', 'maxPreparedSpells', val);\n\t\t\treturn false;\n\t\t});\n\t\tspellDc.parentNode.insertBefore(tracker, spellDc);\n\t});\n}"],"sourceRoot":""}