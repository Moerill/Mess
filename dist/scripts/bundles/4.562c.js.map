{"version":3,"sources":["webpack:///./src/scripts/modify-rolling.js"],"names":["async","onChatCardAction","ev","currentTarget","dataset","action","renderAttack","placeTemplate","renderTemplate","this","_onChatCardAction","getToHitData","actor","item","hasAttack","actorData","data","itemData","flags","dnd5e","rollData","getRollData","parts","type","proficient","push","actorBonus","bonuses","actionType","attackBonus","attack","filterJoin","weaponCriticalThreshold","critical","parseInt","includes","elvenAccuracy","abilityMod","halflingLucky","roll","Roll","join","totalModifier","_safeEval","formula","terms","_formula","getDmgsData","spellLevel","hasDamage","level","duplicate","damage","versatile","splice","scaling","mode","newDmgPart","lvl","details","_scaleCantripDamage","_scaleSpellDamage","length","part","CONFIG","DND5E","damageTypes","game","i18n","localize","rollHit","button","disabled","card","closest","messageId","Item","entityClass","_getChatCardActor","owner","getOwnedItem","itemId","ui","notifications","error","name","adv","settings","get","userId","nd","mods","unshift","r","div","document","createElement","title","total","classList","add","span","appendChild","innerText","insertAdjacentHTML","getTooltip","childNodes","crit","fumble","d20","querySelector","innerHTML","querySelectorAll","forEach","e","idx","alter","parentNode","replaceChild","messages","update","content","rollDmg","autoRoll","autoroll","template","hit","toHitBtn","dmg","btns","Array","from","btn","preventDefault","stopPropagation","targets","user","areaSkill","Object","keys","areaTargetTypes","getProperty","size","img","attackData","toHit","dmgs","sceneId","canvas","scene","id","target","attackTemplateData","flavor","chatFlavor","replace","html","ChatMessage","create","_id","CONST","CHAT_MESSAGE_TYPES","OTHER","speaker","token","alias","getTargetToken","tokenId","targetId","tokens","placeables","find","onMouseEnterTarget","_onHoverIn","onMouseLeaveTarget","visible","_onHoverOut","onDblClickTarget","pos","center","animatePan","x","y","isTokenInside","grid","templatePos","startX","width","startY","height","currGrid","shape","contains","getTargets","getEmbeddedCollection","updateTokenTargets","itemHook","app","formField","inp","dtype","value","object","getFlag","style","flex","_activateFilePicker","after","modifyRolling","register","default","String","scope","Hooks","on","advSelector","templateData","advantage","normal","disadvantage","addEventListener","remove","set","toggle","createControls","controls","insertBefore","chatListeners","bind","_onChatCardToggleContent","importedJS","import","AbilityTemplate","_originalFromItem","fromItem","path","t","loadTexture","then","tex","texture","refresh","newFun","prototype","activatePreviewListeners","toString","Function","changeAbilityTemplate"],"mappings":"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","file":"bundles/4.562c.js","sourcesContent":["async function createControls() {\n\tconst div = document.createElement('div');\n\tdiv.classList.add('mess-roll-control');\n\n\tconst advSelector = game.settings.get('mess', `${game.userId}.adv-selector`);\n\tconst autoRollSelector = game.settings.get('mess', `${game.userId}.autoroll-selector`);\n\tconst templateData = {\n\t\tadvantage: advSelector === 'advantage',\n\t\tnormal: advSelector ===  'normal',\n\t\tdisadvantage: advSelector ===  'disadvantage',\n\t\t...autoRollSelector\n\t}\n\n\tdiv.insertAdjacentHTML('afterbegin', await renderTemplate('modules/mess/templates/roll-control.html', templateData));\n\n\tdiv.querySelectorAll('.mess-adv-selector a').forEach(e => {\n\t\te.addEventListener('click', async function(ev) {\n\t\t\tev.preventDefault();\n\t\t\tev.stopPropagation();\n\n\t\t\tif (ev.currentTarget.classList.contains('mess-selected')) return false;\n\n\t\t\tev.currentTarget.parentNode.querySelector('.mess-selected').classList.remove('mess-selected');\n\t\t\tev.currentTarget.classList.add('mess-selected');\n\n\t\t\tgame.settings.set('mess', `${game.userId}.adv-selector`, ev.currentTarget.name);\n\t\t});\n\t});\n\tdiv.querySelectorAll('.mess-autoroll-selector a') .forEach(e => {\n\t\te.addEventListener('click', async function(ev) {\n\t\t\tev.preventDefault();\n\t\t\tev.stopPropagation();\n\n\t\t\t\n\t\t\tev.currentTarget.classList.toggle('mess-selected');\n\t\t\tlet data = game.settings.get('mess', `${game.userId}.autoroll-selector`);\n\t\t\tdata[ev.currentTarget.name] = ev.currentTarget.classList.contains('mess-selected');\n\t\t\tgame.settings.set('mess', `${game.userId}.autoroll-selector`, data);\n\t\t})\n\t})\n\treturn div;\n}\n\n// Only overwrite stuff for attack buttons\nasync function onChatCardAction (ev) {\n\tif (ev.currentTarget.dataset.action === 'attack')\n\t\treturn renderAttack(ev);\n\tif (ev.currentTarget.dataset.action === 'damage')\n\t\treturn renderAttack(ev);\n\tif (ev.currentTarget.dataset.placeTemplate)\n\t\treturn renderTemplate(ev);\n\n\treturn this._onChatCardAction(ev);\t\t\n}\n\nasync function getToHitData({actor, item}) {\n\tif (!item.hasAttack) return null;\n\tconst actorData = actor.data.data;\n\tconst itemData = item.data.data;\n\tconst flags = actor.data.flags.dnd5e || {};\n\t\n\tlet rollData = item.getRollData();\n\n\t// Define Roll bonuses\n\tconst parts = [`@mod`];\n\tif ( (item.data.type !== \"weapon\") || itemData.proficient ) {\n\t\tparts.push(\"@prof\");\n\t}\n\trollData.parts = parts;\n\t// Attack Bonus\n\tconst actorBonus = actorData.bonuses[itemData.actionType] || {};\n\tif ( itemData.attackBonus || actorBonus.attack ) {\n\t\tparts.push(\"@atk\");\n\t\trollData[\"atk\"] = [itemData.attackBonus, actorBonus.attack].filterJoin(\" + \");\n\t}\n\n\t// Expanded weapon critical threshold\n\tif (( item.data.type === \"weapon\" ) && flags.weaponCriticalThreshold) {\n\t\trollData.critical = parseInt(flags.weaponCriticalThreshold);\n\t}\n\n\t// Elven Accuracy\n\tif ( [\"weapon\", \"spell\"].includes(item.data.type) ) {\n\t\tif (flags.elvenAccuracy && [\"dex\", \"int\", \"wis\", \"cha\"].includes(item.abilityMod)) {\n\t\t\trollData.elvenAccuracy = true;\n\t\t}\n\t}\n\n\t// Apply Halfling Lucky\n\tif ( flags.halflingLucky ) rollData.halflingLucky = true;\n\t\n\t// rollData.formula = rollData.parts.join(\" + \");\n\tconst roll = new Roll(rollData.parts.join('+'), rollData);\n\trollData.totalModifier = roll._safeEval(roll.formula);\n\trollData.totalModifier = rollData.totalModifier >= 0 ? '+' + rollData.totalModifier : rollData.totalModifier;\n\trollData.formula = roll.formula;\n\trollData.terms = roll._formula;\n\treturn rollData;\n}\n\nasync function getDmgsData({actor, item, spellLevel = null}) {\n\tif (!item.hasDamage) return null;\n\tconst actorData = actor.data.data;\n\tconst itemData = item.data.data;\n\tlet rollData = item.getRollData();\n\t\n\tif ( spellLevel ) rollData.item.level = spellLevel;\n\n\trollData.parts = duplicate(itemData.damage.parts);\n\tif (itemData.damage.versatile) \n\t\trollData.parts.splice(1, 0, [itemData.damage.versatile, \"versatile\"]);\n\t\n\tif (item.data.type === 'spell') {\n\t\tif (itemData.scaling.mode === 'cantrip') {\n\t\t\tlet newDmgPart = [rollData.parts[0][0]];\n\t\t\tconst lvl = actor.data.type === 'character' ? actorData.details.level : actorData.details.spellLevel;\n\t\t\titem._scaleCantripDamage(newDmgPart, lvl, itemData.scaling.formula);\n\t\t\trollData.parts[0][0] = newDmgPart[0];\n\t\t} else if (spellLevel && (itemData.scaling.mode === 'level') && itemData.scaling.formula ) {\n\t\t\tlet newDmgPart = [];\n\t\t\titem._scaleSpellDamage(newDmgPart, itemData.level, spellLevel, itemData.scaling.formula)\n\t\t\tif (newDmgPart.length > 0) {\n\t\t\t\tnewDmgPart.push('upcast dice');\n\t\t\t\trollData.parts.push(newDmgPart);\n\t\t\t}\n\t\t}\n\t}\n\t\n\tconst actorBonus = actorData.bonuses[itemData.actionType] || {};\n\tif (actorBonus.damage && parseInt(actorBonus.damage ) !== 0) {\n\t\tparts[0][0] += \"+@dmg\";\n\t\trollData[\"dmg\"] = actorBonus.damage;\n\t}\n\n\tfor (let part of rollData.parts) {\n\t\tlet roll = new Roll(part[0], rollData);\n\t\tconst dmgType = CONFIG.DND5E.damageTypes[part[1]];\n\t\tif (dmgType)\n\t\t\tpart[1] = game.i18n.localize('DND5E.Damage' + CONFIG.DND5E.damageTypes[part[1]]);\n\t\telse if (part[1] === 'versatile')\n\t\t\tpart[1] = game.i18n.localize('DND5E.Versatile');\n\t\tpart.push(roll.formula);\n\t}\n\n\treturn rollData;\n}\n\nasync function rollHit(ev) {\n\t// Extract card data\n\tconst button = ev.currentTarget;\n\tbutton.disabled = true;\n\tconst card = button.closest(\".chat-card\");\n\tconst messageId = card.closest(\".message\").dataset.messageId;\n\n\t// Get the Actor from a synthetic Token\n\tconst actor = CONFIG.Item.entityClass._getChatCardActor(card);\n\tif (!actor.owner) return false;\n\n\t// Get the Item\n\tconst item = actor.getOwnedItem(card.dataset.itemId);\n\tif ( !item ) {\n\t\treturn ui.notifications.error(`The requested item ${card.dataset.itemId} no longer exists on Actor ${actor.name}`)\n\t}\n\n\tlet rollData = await getToHitData({actor, item});\n\tlet adv = game.settings.get('mess', `${game.userId}.adv-selector`);\n\t// Determine the d20 roll and modifiers\n\tlet nd = 1;\n\tlet mods = rollData.halflingLucky ? \"r=1\" : \"\";\n\n\t// Handle advantage\n\tif ( adv === \"advantage\" ) {\n\t\tnd = rollData.elvenAccuracy ? 3 : 2;\n\t\tmods += \"kh\";\n\t}\n\n\t// Handle disadvantage\n\telse if ( adv === \"disadvantage\" ) {\n\t\tnd = 2;\n\t\tmods += \"kl\";\n\t}\n\n\t// Include the d20 roll\n\trollData.parts.unshift(`${nd}d20${mods}`);\n\n\tlet r = new Roll(rollData.parts.join('+'), rollData);\n\tr.roll();\n\tlet div = document.createElement('div');\n\tdiv.title = `${rollData.parts[0]}+${rollData.terms} = ${r.formula} = ${r.total}. Click to see rolls.`;\n\tdiv.classList.add('dice-roll');\n\tdiv.classList.add('mess-dice-result');\n\tconst span = div.appendChild(document.createElement('span'));\n\tspan.innerText = r.total;\n\tdiv.insertAdjacentHTML('beforeend', await r.getTooltip());\n\tconst tooltip = div.childNodes[1];\n\ttooltip.classList.add('hidden');\n\tconst crit = rollData.critical || 20;\n\tconst fumble = rollData.fumble || 1;\n\n\tconst d20 = r.parts[0].total;\n\tif (d20 >= crit) {\n\t\tspan.classList.add('crit');\n\t\tcard.querySelector('.mess-chat-dmg .mess-chat-roll-type').innerHTML += ' - Crit!'\n\t\tcard.querySelectorAll('.mess-button-dmg').forEach((e, idx) => {\n\t\t\tconst formula = e.dataset.formula;\n\t\t\tconst r = new Roll(formula);\n\t\t\tr.alter(0, 2);\n\t\t\te.innerHTML = `<i class=\"fas fa-dice-d20\"></i> ${r.formula}`\n\t\t\te.dataset.formula = r.formula;\n\t\t});\n\t}\n\tif (d20 <= fumble)\n\t\tspan.classList.add('fumble');\n\n\tev.currentTarget.parentNode.replaceChild(div, ev.currentTarget);\n\tif (messageId) {\n\t\tconst message = game.messages.get(messageId);\n\t\tmessage.update({content: card.parentNode.innerHTML});\n\t}\n}\n\nasync function rollDmg(ev) {\n\t// Extract card data\n\tconst button = ev.currentTarget;\n\tbutton.disabled = true;\n\tconst card = button.closest(\".chat-card\");\n\tconst messageId = card.closest(\".message\").dataset.messageId;\n\tconst formula = button.dataset.formula;\n\n\tlet r = new Roll(formula);\n\tr.roll();\n\tlet div = document.createElement('div');\n\tdiv.title = `${button.dataset.terms} = ${r.formula} = ${r.total}. Click to see rolls.`;\n\tdiv.classList.add('dice-roll');\n\tdiv.classList.add('mess-dice-result');\n\tconst span = div.appendChild(document.createElement('span'));\n\tspan.innerText = r.total;\n\tdiv.insertAdjacentHTML('beforeend', await r.getTooltip());\n\tconst tooltip = div.childNodes[1];\n\ttooltip.classList.add('hidden');\n\n\tev.currentTarget.parentNode.replaceChild(div, ev.currentTarget);\n\n\tif (messageId) {\n\t\tconst message = game.messages.get(messageId);\n\t\tmessage.update({content: card.parentNode.innerHTML});\n\t}\n}\n\nasync function autoRoll(autoroll, template) {\n\tlet card = document.createElement('div');\n\tcard.classList.add('message');\n\tcard.insertAdjacentHTML('afterbegin', template);\n\tif (autoroll.hit) {\n\t\tlet toHitBtn = card.querySelector('.mess-button-to-hit');\n\t\tif (toHitBtn)\n\t\t\tawait rollHit({currentTarget: toHitBtn});\n\t}\n\n\tif (autoroll.dmg) {\n\t\tconst btns = Array.from(card.querySelectorAll('.mess-button-dmg'));\n\t\tfor (const btn of btns)\n\t\t\tawait rollDmg({currentTarget: btn});\n\t}\n\treturn card.innerHTML;\n}\n\nasync function renderAttack(ev) {\n\tif (ev.type === 'click') {\n\t\tev.preventDefault();\n\t\tev.stopPropagation();\n\t}\n\n\t// Extract card data\n\tconst button = ev.currentTarget;\n\tbutton.disabled = true;\n\tconst card = button.closest(\".chat-card\");\n\n\t// Get the Actor from a synthetic Token\n\tconst actor = CONFIG.Item.entityClass._getChatCardActor(card);\n\n\tif ( !actor || !actor.owner) return;\n\n\t// Get the Item\n\tconst item = actor.getOwnedItem(card.dataset.itemId);\n\tif ( !item ) {\n\t\treturn ui.notifications.error(`The requested item ${card.dataset.itemId} no longer exists on Actor ${actor.name}`)\n\t}\n\n\tlet targets = game.user.targets;\n\t// Don't roll for all targets if its an AoE, due to only rolling e.g. dmg once for all targets\n\t// TODO: Maybe add target list or chat cards for making saving throws\n\t// or not, since it would just spam the chatlog.. hmm\n\tconst areaSkill = Object.keys(CONFIG.DND5E.areaTargetTypes).includes(getProperty(item, 'data.data.target.type'));\n\tif (!targets.size || areaSkill)\n\t\ttargets =  [{data: {\n\t\t\t\tname: \"someone\",\n\t\t\t\timg: \"\"\n\t\t\t}\n\t\t}];\n\tconst spellLevel = parseInt(card.dataset.spellLevel) || null;\n\n\tconst template = 'modules/mess/templates/attack-card.html';\n\n\tconst attackData = {\n\t\tactor, item,\n\t\ttoHit: await getToHitData({actor, item}),\n\t\tdmgs: await getDmgsData({actor, item, spellLevel}),\n\t\tsceneId: canvas.scene.id\n\t}\n\n\tconst autoroll = game.settings.get('mess', `${game.userId}.autoroll-selector`);\n\n\tfor (const target of targets) {\n\t\tconst attackTemplateData = {\n\t\t\t\t\t\t\t\t\t...attackData, \n\t\t\t\t\t\t\t\t\ttarget: target.data,\n\t\t\t\t\t\t\t\t\tflavor: item.data.data.chatFlavor.replace(/\\[target\\.name\\]/g, target.data.name)\n\t\t\t\t\t\t\t\t};\n\t\tlet html = await renderTemplate(template, attackTemplateData);\n\n\t\tif (autoroll.hit || autoroll.dmg) \n\t\t\thtml = await autoRoll(autoroll, html);\n\n\t\tChatMessage.create({\n      user: game.user._id,\n      type: CONST.CHAT_MESSAGE_TYPES.OTHER,\n      content: html,\n      speaker: {\n        actor: item.actor._id,\n        token: item.actor.token,\n        alias: item.actor.name\n\t\t\t}\n\t\t});\n\t}\n\n\tbutton.disabled = false;\n}\n\nasync function getTargetToken(ev) {\n\tconst card = ev.currentTarget.closest('.mess-attack-card');\n\tconst sceneId = card.dataset.sceneId;\n\tif (sceneId !== canvas.scene.id) return false;\n\tconst tokenId = card.dataset.targetId;\n\tif (!tokenId) return false;\n\n\tconst token = canvas.tokens.placeables.find(e => e.id === tokenId);\n\tif (!token) return false;\n\treturn token;\n}\n\nasync function onMouseEnterTarget(ev) {\n\tev.preventDefault();\n\tev.stopPropagation();\n\tconst token = await getTargetToken(ev);\n\tif (!token) return false;\n\n\ttoken._onHoverIn();\n}\n\nasync function onMouseLeaveTarget(ev) {\n\tev.preventDefault();\n\tev.stopPropagation();\n\tconst token = await getTargetToken(ev);\n\tif (!token || !token.visible) return false;\n\t\n\ttoken._onHoverOut();\n}\n\nasync function onDblClickTarget(ev) {\n\tev.preventDefault();\n\tev.stopPropagation();\n\tconst token = await getTargetToken(ev);\n\tif (!token || !token.visible) return false;\n\t\n\tconst pos = token.center;\n\tcanvas.animatePan({x: pos.x, y: pos.y})\n}\n\n\n\nfunction isTokenInside(token) {\n\tconst grid = canvas.scene.data.grid,\n\t\t\t\ttemplatePos = {x: this.data.x, y: this.data.y};\n\t// Check for center of  each square the token uses.\n\t// e.g. for large tokens all 4 squares\n\tconst startX = token.width >= 1 ? 0.5 : token.width / 2;\n\tconst startY = token.height >= 1 ? 0.5 : token.height / 2;\n\tfor (let x = startX; x < token.width; x++) {\n\t\tfor (let y = startY; y < token.height; y++) {\n\t\t\tconst currGrid = {\n\t\t\t\tx: token.x + x * grid - templatePos.x,\n\t\t\t\ty: token.y + y * grid - templatePos.y\n\t\t\t};\n\t\t\tconst contains = this.shape.contains(currGrid.x, currGrid.y);\n\t\t\tif (contains) return true;\n\t\t}\n\t}\n\treturn false;\n}\n\nfunction getTargets() {\n\n\tconst tokens = canvas.scene.getEmbeddedCollection('Token');\n\tlet targets = [];\n\t\n\tfor (const token of tokens)\n\t\tif (this.isTokenInside(token)) { targets.push(token._id); }\n\tgame.user.updateTokenTargets(targets);\n}\n\nasync function changeAbilityTemplate() {\n\tconst importedJS = (await import(/* webpackIgnore: true */ '/systems/dnd5e/module/pixi/ability-template.js'))\n\tconst AbilityTemplate = importedJS.default || importedJS.AbilityTemplate;\n\n\t\n\tconst _originalFromItem = AbilityTemplate.fromItem;\n\tAbilityTemplate.fromItem = function(item) {\n\t\tconst template = _originalFromItem.bind(this)(item);\n\t\t\n\t\t// generate a texture based on the items dmg type, ...\n\t\t// Add settings to define custom templates for stuff.\n\t\tlet path = item.getFlag('mess', 'templateTexture');\n\t\tif (!path && item.hasDamage) {\n\t\t\tconst settings = game.settings.get('mess', 'templateTexture');\n\t\t\tpath = settings[item.data.data.damage.parts[0][1]][template.data.t];\n\t\t}\n\t\tif (path)\n\t\t\tloadTexture(path).then(tex => {\n\t\t\t\ttemplate.texture = tex;\n\t\t\t\ttemplate.data.texture = path;\n\t\t\t\ttemplate.refresh();\n\t\t\t})\n\t\ttemplate.item = item;\n\t\treturn template;\n\t}\n\n\t//  rather ugly, maybe find a better way at some point :shrug:\n\tconst origPrevListeners = AbilityTemplate.prototype.activatePreviewListeners.toString();\n\tconst newFun = origPrevListeners.replace(/this\\.refresh\\(\\)\\;/, \n\t\t\t\t// get targets\n\t\t\t\t\t`this.refresh();\n\t\t\t\t\tthis.getTargets(this);\n\t\t\t\t`);\n\n\tAbilityTemplate.prototype.getTargets = getTargets;\n\tAbilityTemplate.prototype.isTokenInside = isTokenInside;\n\n\tAbilityTemplate.prototype.activatePreviewListeners = Function(`\"use strict\"; return ( function ${newFun} )`)();\n}\n\nasync function itemHook(app, html) {\n\tconst div = document.createElement('div');\n\tdiv.classList.add('form-group');\n\tdiv.appendChild(document.createElement('label')).innerText = 'Template Texture';\n\tconst formField = div.appendChild(document.createElement('div'));\n\tformField.classList.add('form-fields');\n\tconst inp = formField.appendChild(document.createElement('input'));\n\tinp.dataset.dtype = 'String';\n\tinp.type = 'text';\n\tinp.name = 'flags.mess.templateTexture';\n\tinp.value = app.object.getFlag('mess', 'templateTexture') || \"\";\n\n\tformField.insertAdjacentHTML('beforeend', `\n\t\t<button type=\"button\" class=\"file-picker\" data-type=\"imagevideo\" data-target=\"flags.mess.templateTexture\" title=\"Browse Files\" tabindex=\"-1\">\n\t\t\t<i class=\"fas fa-file-import fa-fw\"></i>\n\t\t</button>\n\t`);\n\tconst button = formField.querySelector('button');\n\tbutton.style.flex = '0';\n\tapp._activateFilePicker(button);\n\thtml[0].querySelector('[name=\"data.target.units\"]').closest('.form-group').after(div);\n}\n\n\nexport default function modifyRolling() {\n\tgame.settings.register('mess', `${game.userId}.adv-selector`, {\n\t\tname: 'Mess - Advantage Selector',\n\t\tdefault: 'normal',\n\t\ttype: String,\n\t\tscope: 'user'\n\t});\n\tgame.settings.register('mess', `${game.userId}.autoroll-selector`, {\n\t\tname: 'Mess - Autoroll Selector',\n\t\tdefault: {hit: false, dmg: false},\n\t\ttype: Object,\n\t\tscope: 'user'\n\t});\n\n\tHooks.on('renderChatLog', async (app, html, data) => {\n\t\tconst div = await createControls();\n\t\tconst controls = html[0].querySelector('#chat-controls');\n\t\tcontrols.insertBefore(div, controls.childNodes[0]);\n\t});\n\n\t// roundabout way to get the listener do what *I* want...\n\t// Since adding my own listener in renderChatLog was \"to early\".\n\tCONFIG.Item.entityClass.chatListeners = function (html) {\n    html.on('click', '.card-buttons button', onChatCardAction.bind(this));\n\t\thtml.on('click', '.item-name', this._onChatCardToggleContent.bind(this));\n\t\t\n\t\t// lets just use this for even more listeners\n\t\thtml.on('mouseenter', '.mess-chat-target', onMouseEnterTarget);\n\t\thtml.on('mouseleave', '.mess-chat-target', onMouseLeaveTarget);\n\t\thtml.on('dblclick', '.mess-chat-target', onDblClickTarget);\n\n\t\thtml.on('click', '.mess-button-to-hit', rollHit);\n\t\thtml.on('click', '.mess-button-dmg', rollDmg);\n\n\t\t// delegate(html[0], {\n\t\t// \ttarget: '[data-tippy-content]'\n\t\t// });\n\t}\n\n\tHooks.on('preCreateChatMessage', async (data) => {\n\t\tconst div = document.createElement('div');\n\t\tdiv.insertAdjacentHTML('afterbegin',  data.content);\n\t\tlet btn = div.querySelector('button[data-action=\"attack\"]');\n\t\tif (!btn) {\n\t\t\tbtn = div.querySelector('button[data-action=\"damage\"]');\n\t\t}\n\t\tif (btn)\n\t\t\trenderAttack({currentTarget: btn});\n\n\t});\n\n\tHooks.on('renderItemSheet', itemHook)\n\n\tchangeAbilityTemplate();\n}\n"],"sourceRoot":""}