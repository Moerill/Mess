{"version":3,"sources":["webpack:///./src/scripts/modify-rolling.js"],"names":["getAdvantageSettings","game","settings","get","userId","async","onChatCardAction","ev","currentTarget","dataset","action","renderAttack","placeTemplate","renderTemplate","this","_onChatCardAction","getToHitData","actor","item","hasAttack","actorData","data","itemData","flags","dnd5e","rollData","getRollData","parts","type","proficient","push","weaponCriticalThreshold","critical","parseInt","includes","elvenAccuracy","abilityMod","halflingLucky","actorBonus","bonuses","actionType","attackBonus","attack","filterJoin","isNaN","Number","roll","Roll","join","totalModifier","_safeEval","formula","_formula","situationalModifier","document","getElementById","value","terms","getDmgsData","spellLevel","hasDamage","level","duplicate","damage","versatile","splice","scaling","mode","newDmgPart","lvl","details","_scaleCantripDamage","_scaleSpellDamage","length","part","CONFIG","DND5E","damageTypes","i18n","localize","rollHit","button","disabled","card","closest","messageId","message","messages","owner","user","id","ui","notifications","error","Item","entityClass","_getChatCardActor","getOwnedItem","itemId","name","adv","nd","mods","unshift","r","div","createElement","title","total","classList","add","span","appendChild","innerText","insertAdjacentHTML","getTooltip","childNodes","crit","fumble","d20","querySelector","innerHTML","querySelectorAll","forEach","e","idx","alter","parentNode","replaceChild","update","content","rollDmg","autoRoll","autoroll","template","hit","toHitBtn","dmg","btns","Array","from","btn","preventDefault","stopPropagation","targets","areaSkill","Object","keys","areaTargetTypes","getProperty","size","img","attackData","toHit","dmgs","sceneId","canvas","scene","rollMode","target","allowed","_handleResourceConsumption","isCard","isAttack","attackTemplateData","flavor","chatFlavor","replace","html","chatData","_id","CONST","CHAT_MESSAGE_TYPES","OTHER","speaker","token","alias","ChatMessage","getWhisperIDs","create","getTargetToken","tokenId","targetId","tokens","placeables","find","onMouseEnterTarget","_onHoverIn","onMouseLeaveTarget","visible","_onHoverOut","onDblClickTarget","pos","center","animatePan","x","y","isTokenInside","grid","templatePos","startX","width","startY","height","currGrid","shape","contains","getTargets","getEmbeddedCollection","updateTokenTargets","itemHook","app","formField","inp","dtype","object","getFlag","style","flex","_activateFilePicker","after","rollD20","diceFormula","reliableTalent","d20Mod","templateData","tooltip","actorSheetHook","abilityMods","$","off","addEventListener","abilityId","ability","label","abilities","mod","feats","remarkableAthlete","characterFlags","proficiency","Math","ceil","attributes","prof","jackOfAllTrades","floor","checkBonus","format","bind","abl","saveBonus","skills","skillId","skill","skl","bonus","modifyRolling","register","default","String","scope","Hooks","on","advSelector","advantage","normal","disadvantage","arr","currIdx","findIndex","remove","newSelected","set","toggle","createControls","controls","insertBefore","chatListeners","_onChatCardToggleContent","importedJS","import","AbilityTemplate","_originalFromItem","fromItem","path","t","loadTexture","then","tex","texture","refresh","newFun","prototype","activatePreviewListeners","toString","Function","changeAbilityTemplate"],"mappings":"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","file":"bundles/modify-rolling.7daa.js","sourcesContent":["function getAdvantageSettings() {\n\treturn game.settings.get('mess', `${game.userId}.adv-selector`);\n}\n\nfunction getD20Modifier() {\n\treturn document.getElementById('mess-roll-mod').value;\n}\n\nasync function createControls() {\n\tconst div = document.createElement('div');\n\tdiv.classList.add('mess-roll-control');\n\n\tconst advSelector = game.settings.get('mess', `${game.userId}.adv-selector`);\n\tconst autoRollSelector = game.settings.get('mess', `${game.userId}.autoroll-selector`);\n\tconst templateData = {\n\t\tadvantage: advSelector === 'advantage',\n\t\tnormal: advSelector ===  'normal',\n\t\tdisadvantage: advSelector ===  'disadvantage',\n\t\t...autoRollSelector\n\t}\n\n\tdiv.insertAdjacentHTML('afterbegin', await renderTemplate('modules/mess/templates/roll-control.html', templateData));\n\n\tdiv.querySelectorAll('.mess-adv-selector a').forEach(e => {\n\t\te.addEventListener('click', async function(ev) {\n\t\t\tev.preventDefault();\n\t\t\tev.stopPropagation();\n\n\t\t\t// if (ev.currentTarget.classList.contains('mess-selected')) return false;\n\n\t\t\t// ev.currentTarget.parentNode.querySelector('.mess-selected').classList.remove('mess-selected');\n\t\t\t// ev.currentTarget.classList.add('mess-selected');\n\n\t\t\t// game.settings.set('mess', `${game.userId}.adv-selector`, ev.currentTarget.name);\n\t\t\tconst arr = Array.from(ev.currentTarget.parentNode.querySelectorAll('a'));\n\t\t\tconst currIdx = arr.findIndex(e => e.classList.contains('mess-selected'));\n\t\t\tarr[currIdx].classList.remove('mess-selected');\n\t\t\tconst newSelected = arr[(currIdx + 1) % arr.length];\n\t\t\tnewSelected.classList.add('mess-selected');\n\t\t\tgame.settings.set('mess', `${game.userId}.adv-selector`, newSelected.name);\n\t\t});\n\t});\n\tdiv.querySelectorAll('.mess-autoroll-selector a') .forEach(e => {\n\t\te.addEventListener('click', async function(ev) {\n\t\t\tev.preventDefault();\n\t\t\tev.stopPropagation();\n\n\t\t\t\n\t\t\tev.currentTarget.classList.toggle('mess-selected');\n\t\t\tlet data = game.settings.get('mess', `${game.userId}.autoroll-selector`);\n\t\t\tdata[ev.currentTarget.name] = ev.currentTarget.classList.contains('mess-selected');\n\t\t\tgame.settings.set('mess', `${game.userId}.autoroll-selector`, data);\n\t\t})\n\t});\n\treturn div;\n}\n\n// Only overwrite stuff for attack buttons\nasync function onChatCardAction (ev) {\n\tif (ev.currentTarget.dataset.action === 'attack')\n\t\treturn renderAttack(ev);\n\tif (ev.currentTarget.dataset.action === 'damage')\n\t\treturn renderAttack(ev);\n\tif (ev.currentTarget.dataset.placeTemplate)\n\t\treturn renderTemplate(ev);\n\n\treturn this._onChatCardAction(ev);\t\t\n}\n\nasync function getToHitData({actor, item}) {\n\tif (!item.hasAttack) return null;\n\tconst actorData = actor.data.data;\n\tconst itemData = item.data.data;\n\tconst flags = actor.data.flags.dnd5e || {};\n\t\n\tlet rollData = item.getRollData();\n\n\t// Define Roll bonuses\n\tconst parts = [`@mod`];\n\tif ( (item.data.type !== \"weapon\") || itemData.proficient ) {\n\t\tparts.push(\"@prof\");\n\t}\n\trollData.parts = parts;\n\n\t// Expanded weapon critical threshold\n\tif (( item.data.type === \"weapon\" ) && flags.weaponCriticalThreshold) {\n\t\trollData.critical = parseInt(flags.weaponCriticalThreshold);\n\t}\n\n\t// Elven Accuracy\n\tif ( [\"weapon\", \"spell\"].includes(item.data.type) ) {\n\t\tif (flags.elvenAccuracy && [\"dex\", \"int\", \"wis\", \"cha\"].includes(item.abilityMod)) {\n\t\t\trollData.elvenAccuracy = true;\n\t\t}\n\t}\n\n\t// Apply Halfling Lucky\n\tif ( flags.halflingLucky ) rollData.halflingLucky = true;\n\n\t// Attack Bonus\n\tconst actorBonus = actorData.bonuses[itemData.actionType] || {};\n\tif ( itemData.attackBonus || actorBonus.attack ) {\n\t\t// parts.push(\"@atk\");\n\t\trollData[\"atk\"] = [itemData.attackBonus, actorBonus.attack].filterJoin(\" + \");\n\t\tif (!isNaN(Number(rollData[\"atk\"]))) {\n\t\t\tparts.push(\"@atk\");\n\t\t}\n\t}\n\n\tlet roll = new Roll(rollData.parts.join('+'), rollData);\n\trollData.totalModifier = roll._safeEval(roll.formula);\n\trollData.totalModifier = rollData.totalModifier >= 0 ? '+' + rollData.totalModifier : rollData.totalModifier;\n\tif (rollData[\"atk\"] && !roll._formula.includes('@atk')) {\n\t\trollData.parts.push(\"@atk\");\n\t\troll = new Roll(rollData.parts.join('+'), rollData);\n\t\trollData.totalModifier += `+${rollData[\"atk\"]}`;\n\t}\n\tconst situationalModifier = document.getElementById('mess-roll-mod');\n\tif (situationalModifier.value) {\n\t\trollData.parts.push(situationalModifier.value);\n\t\troll = new Roll(rollData.parts.join('+'), rollData);\n\t\trollData.totalModifier += `+${situationalModifier.value}`;\n\t}\n\trollData.formula = roll.formula;\n\trollData.terms = roll._formula;\n\treturn rollData;\n}\n\nasync function getDmgsData({actor, item, spellLevel = null}) {\n\tif (!item.hasDamage) return null;\n\tconst actorData = actor.data.data;\n\tconst itemData = item.data.data;\n\tlet rollData = item.getRollData();\n\t\n\tif ( spellLevel ) rollData.item.level = spellLevel;\n\n\trollData.parts = duplicate(itemData.damage.parts);\n\tif (itemData.damage.versatile) \n\t\trollData.parts.splice(1, 0, [itemData.damage.versatile, \"versatile\"]);\n\t\n\tif (item.data.type === 'spell') {\n\t\tif (itemData.scaling.mode === 'cantrip') {\n\t\t\tlet newDmgPart = [rollData.parts[0][0]];\n\t\t\tconst lvl = actor.data.type === 'character' ? actorData.details.level : actorData.details.spellLevel;\n\t\t\titem._scaleCantripDamage(newDmgPart, lvl, itemData.scaling.formula);\n\t\t\trollData.parts[0][0] = newDmgPart[0];\n\t\t} else if (spellLevel && (itemData.scaling.mode === 'level') && itemData.scaling.formula ) {\n\t\t\tlet newDmgPart = [];\n\t\t\titem._scaleSpellDamage(newDmgPart, itemData.level, spellLevel, itemData.scaling.formula)\n\t\t\tif (newDmgPart.length > 0) {\n\t\t\t\tnewDmgPart.push('upcast dice');\n\t\t\t\trollData.parts.push(newDmgPart);\n\t\t\t}\n\t\t}\n\t}\n\t\n\tconst actorBonus = actorData.bonuses[itemData.actionType] || {};\n\tif (actorBonus.damage && parseInt(actorBonus.damage ) !== 0) {\n\t\tparts[0][0] += \"+@dmg\";\n\t\trollData[\"dmg\"] = actorBonus.damage;\n\t}\n\n\tfor (let part of rollData.parts) {\n\t\tlet roll = new Roll(part[0], rollData);\n\t\tconst dmgType = CONFIG.DND5E.damageTypes[part[1]];\n\t\tif (dmgType)\n\t\t\tpart[1] = game.i18n.localize('DND5E.Damage' + CONFIG.DND5E.damageTypes[part[1]]);\n\t\telse if (part[1] === 'versatile')\n\t\t\tpart[1] = game.i18n.localize('DND5E.Versatile');\n\t\tpart.push(roll.formula);\n\t}\n\n\treturn rollData;\n}\n\nasync function rollHit(ev) {\n\t// Extract card data\n\tconst button = ev.currentTarget;\n\tbutton.disabled = true;\n\tconst card = button.closest(\".chat-card\");\n\tconst messageId = card.closest(\".message\").dataset.messageId;\n\t// Check if user owns chat message, else return\n\tif (messageId) {\n\t\tconst message = game.messages.get(messageId);\n\t\t\n\t\tif (!message.owner && message.user.id !== game.user.id) {\n\t\t\tui.notifications.error('You do not own the permissions to make that rolL!');\n\t\t\treturn;\n\t\t}\n\t}\n\t// Get the Actor from a synthetic Token\n\tconst actor = CONFIG.Item.entityClass._getChatCardActor(card);\n\tif (!actor.owner) return false;\n\n\t// Get the Item\n\tconst item = actor.getOwnedItem(card.dataset.itemId);\n\tif ( !item ) {\n\t\treturn ui.notifications.error(`The requested item ${card.dataset.itemId} no longer exists on Actor ${actor.name}`)\n\t}\n\n\tlet rollData = await getToHitData({actor, item});\n\tlet adv = getAdvantageSettings();\n\t// Determine the d20 roll and modifiers\n\tlet nd = 1;\n\tlet mods = rollData.halflingLucky ? \"r=1\" : \"\";\n\n\t// Handle advantage\n\tif ( adv === \"advantage\" ) {\n\t\tnd = rollData.elvenAccuracy ? 3 : 2;\n\t\tmods += \"kh\";\n\t}\n\n\t// Handle disadvantage\n\telse if ( adv === \"disadvantage\" ) {\n\t\tnd = 2;\n\t\tmods += \"kl\";\n\t}\n\n\t// Include the d20 roll\n\trollData.parts.unshift(`${nd}d20${mods}`);\n\t\n\tlet r = new Roll(rollData.parts.join('+'), rollData);\n\tr.roll();\n\tlet div = document.createElement('div');\n\tdiv.title = `${rollData.parts[0]}+${rollData.terms} = ${r.formula} = ${r.total}. Click to see rolls.`;\n\tdiv.classList.add('dice-roll');\n\tdiv.classList.add('mess-dice-result');\n\tconst span = div.appendChild(document.createElement('span'));\n\tspan.innerText = r.total;\n\tdiv.insertAdjacentHTML('beforeend', await r.getTooltip());\n\tconst tooltip = div.childNodes[1];\n\ttooltip.classList.add('hidden');\n\tconst crit = rollData.critical || 20;\n\tconst fumble = rollData.fumble || 1;\n\n\tconst d20 = r.parts[0].total;\n\tif (d20 >= crit) {\n\t\tspan.classList.add('crit');\n\t\tcard.querySelector('.mess-chat-dmg .mess-chat-roll-type').innerHTML += ' - Crit!'\n\t\tcard.querySelectorAll('.mess-button-dmg').forEach((e, idx) => {\n\t\t\tconst formula = e.dataset.formula;\n\t\t\tconst r = new Roll(formula);\n\t\t\tr.alter(0, 2);\n\t\t\te.innerHTML = `<i class=\"fas fa-dice-d20\"></i> ${r.formula}`\n\t\t\te.dataset.formula = r.formula;\n\t\t});\n\t}\n\tif (d20 <= fumble)\n\t\tspan.classList.add('fumble');\n\n\tev.currentTarget.parentNode.replaceChild(div, ev.currentTarget);\n\tif (messageId) {\n\t\tconst message = game.messages.get(messageId);\n\t\tmessage.update({content: card.parentNode.innerHTML});\n\t}\n}\n\nasync function rollDmg(ev) {\n\t// Extract card data\n\tconst button = ev.currentTarget;\n\tbutton.disabled = true;\n\tconst card = button.closest(\".chat-card\");\n\tconst messageId = card.closest(\".message\").dataset.messageId;\n\n\t// Check if user owns chat message, else return\n\tif (messageId) {\n\t\tconst message = game.messages.get(messageId);\n\t\t\n\t\tif (!message.owner && message.user.id !== game.user.id) {\n\t\t\tui.notifications.error('You do not own the permissions to make that rolL!');\n\t\t\treturn;\n\t\t}\n\t}\n\tconst formula = button.dataset.formula;\n\n\tlet r = new Roll(formula);\n\tr.roll();\n\tlet div = document.createElement('div');\n\tdiv.title = `${button.dataset.terms} = ${r.formula} = ${r.total}. Click to see rolls.`;\n\tdiv.classList.add('dice-roll');\n\tdiv.classList.add('mess-dice-result');\n\tconst span = div.appendChild(document.createElement('span'));\n\tspan.innerText = r.total;\n\tdiv.insertAdjacentHTML('beforeend', await r.getTooltip());\n\tconst tooltip = div.childNodes[1];\n\ttooltip.classList.add('hidden');\n\n\tev.currentTarget.parentNode.replaceChild(div, ev.currentTarget);\n\n\tif (messageId) {\n\t\tconst message = game.messages.get(messageId);\n\t\tmessage.update({content: card.parentNode.innerHTML});\n\t}\n}\n\nasync function autoRoll(autoroll, template) {\n\tlet card = document.createElement('div');\n\tcard.classList.add('message');\n\tcard.insertAdjacentHTML('afterbegin', template);\n\tif (autoroll.hit) {\n\t\tlet toHitBtn = card.querySelector('.mess-button-to-hit');\n\t\tif (toHitBtn)\n\t\t\tawait rollHit({currentTarget: toHitBtn});\n\t}\n\n\tif (autoroll.dmg) {\n\t\tconst btns = Array.from(card.querySelectorAll('.mess-button-dmg'));\n\t\tfor (const btn of btns)\n\t\t\tawait rollDmg({currentTarget: btn});\n\t}\n\treturn card.innerHTML;\n}\n\nasync function renderAttack(ev) {\n\tif (ev.type === 'click') {\n\t\tev.preventDefault();\n\t\tev.stopPropagation();\n\t}\n\n\t// Extract card data\n\tconst button = ev.currentTarget;\n\tbutton.disabled = true;\n\tconst card = button.closest(\".chat-card\");\n\n\t// Get the Actor from a synthetic Token\n\tconst actor = CONFIG.Item.entityClass._getChatCardActor(card);\n\n\tif ( !actor || !actor.owner) return;\n\n\t// Get the Item\n\tconst item = actor.getOwnedItem(card.dataset.itemId);\n\tif ( !item ) {\n\t\treturn ui.notifications.error(`The requested item ${card.dataset.itemId} no longer exists on Actor ${actor.name}`)\n\t}\n\n\tlet targets = game.user.targets;\n\t// Don't roll for all targets if its an AoE, due to only rolling e.g. dmg once for all targets\n\t// TODO: Maybe add target list or chat cards for making saving throws\n\t// or not, since it would just spam the chatlog.. hmm\n\tconst areaSkill = Object.keys(CONFIG.DND5E.areaTargetTypes).includes(getProperty(item, 'data.data.target.type'));\n\tif (!targets.size || areaSkill)\n\t\ttargets =  [{data: {\n\t\t\t\tname: \"someone\",\n\t\t\t\timg: \"\"\n\t\t\t}\n\t\t}];\n\tconst spellLevel = parseInt(card.dataset.spellLevel) || null;\n\n\tconst template = 'modules/mess/templates/attack-card.html';\n\n\tconst attackData = {\n\t\tactor, item,\n\t\ttoHit: await getToHitData({actor, item}),\n\t\tdmgs: await getDmgsData({actor, item, spellLevel}),\n\t\tsceneId: canvas.scene.id,\n\t\tuser: game.user.id\n\t}\n\n\tconst autoroll = game.settings.get('mess', `${game.userId}.autoroll-selector`);\n\n\tlet rollMode = game.settings.get(\"core\", \"rollMode\");\n\tfor (const target of targets) {\n\t\tconst allowed = await item._handleResourceConsumption({isCard: false, isAttack: true});\n\t\tconst attackTemplateData = {\n\t\t\t\t\t\t\t\t\t...attackData, \n\t\t\t\t\t\t\t\t\ttarget: target.data,\n\t\t\t\t\t\t\t\t\tflavor: item.data.data.chatFlavor.replace(/\\[target\\.name\\]/g, target.data.name),\n\t\t\t\t\t\t\t\t\tallowed\n\t\t\t\t\t\t\t\t};\n\t\tlet html = await renderTemplate(template, attackTemplateData);\n\n\t\t\n\n\t\tif (autoroll.hit || autoroll.dmg) \n\t\t\thtml = await autoRoll(autoroll, html);\n\n\n\t\tlet chatData = {\n      user: game.user._id,\n      type: CONST.CHAT_MESSAGE_TYPES.OTHER,\n      content: html,\n      speaker: {\n        actor: item.actor._id,\n        token: item.actor.token,\n        alias: item.actor.name\n\t\t\t}\n\t\t};\n\t\tif ( [\"gmroll\", \"blindroll\"].includes(rollMode) ) chatData[\"whisper\"] = ChatMessage.getWhisperIDs(\"GM\");\n\t\tif ( rollMode === \"blindroll\" ) chatData[\"blind\"] = true;\n\t\n\t\tChatMessage.create(chatData);\n\t}\n\n\tbutton.disabled = false;\n}\n\nasync function getTargetToken(ev) {\n\tconst card = ev.currentTarget.closest('.mess-attack-card');\n\tconst sceneId = card.dataset.sceneId;\n\tif (sceneId !== canvas.scene.id) return false;\n\tconst tokenId = card.dataset.targetId;\n\tif (!tokenId) return false;\n\n\tconst token = canvas.tokens.placeables.find(e => e.id === tokenId);\n\tif (!token) return false;\n\treturn token;\n}\n\nasync function onMouseEnterTarget(ev) {\n\tev.preventDefault();\n\tev.stopPropagation();\n\tconst token = await getTargetToken(ev);\n\tif (!token) return false;\n\n\ttoken._onHoverIn();\n}\n\nasync function onMouseLeaveTarget(ev) {\n\tev.preventDefault();\n\tev.stopPropagation();\n\tconst token = await getTargetToken(ev);\n\tif (!token || !token.visible) return false;\n\t\n\ttoken._onHoverOut();\n}\n\nasync function onDblClickTarget(ev) {\n\tev.preventDefault();\n\tev.stopPropagation();\n\tconst token = await getTargetToken(ev);\n\tif (!token || !token.visible) return false;\n\t\n\tconst pos = token.center;\n\tcanvas.animatePan({x: pos.x, y: pos.y})\n}\n\n\n\nfunction isTokenInside(token) {\n\tconst grid = canvas.scene.data.grid,\n\t\t\t\ttemplatePos = {x: this.data.x, y: this.data.y};\n\t// Check for center of  each square the token uses.\n\t// e.g. for large tokens all 4 squares\n\tconst startX = token.width >= 1 ? 0.5 : token.width / 2;\n\tconst startY = token.height >= 1 ? 0.5 : token.height / 2;\n\tfor (let x = startX; x < token.width; x++) {\n\t\tfor (let y = startY; y < token.height; y++) {\n\t\t\tconst currGrid = {\n\t\t\t\tx: token.x + x * grid - templatePos.x,\n\t\t\t\ty: token.y + y * grid - templatePos.y\n\t\t\t};\n\t\t\tconst contains = this.shape.contains(currGrid.x, currGrid.y);\n\t\t\tif (contains) return true;\n\t\t}\n\t}\n\treturn false;\n}\n\nfunction getTargets() {\n\tconst tokens = canvas.scene.getEmbeddedCollection('Token');\n\tlet targets = [];\n\t\n\tfor (const token of tokens)\n\t\tif (this.isTokenInside(token)) { targets.push(token._id); }\n\tgame.user.updateTokenTargets(targets);\n}\n\nasync function changeAbilityTemplate() {\n\tconst importedJS = (await import(/* webpackIgnore: true */ '/systems/dnd5e/module/pixi/ability-template.js'))\n\tconst AbilityTemplate = importedJS.default || importedJS.AbilityTemplate;\n\n\t\n\tconst _originalFromItem = AbilityTemplate.fromItem;\n\tAbilityTemplate.fromItem = function(item) {\n\t\tconst template = _originalFromItem.bind(this)(item);\n\t\t\n\t\t// generate a texture based on the items dmg type, ...\n\t\t// Add settings to define custom templates for stuff.\n\t\tlet path = item.getFlag('mess', 'templateTexture');\n\t\tif (!path && item.hasDamage) {\n\t\t\tconst settings = game.settings.get('mess', 'templateTexture') || {};\n\t\t\tpath = settings[item.data.data.damage.parts[0][1]] || {};\n\t\t\tpath = path[template.data.t];\n\t\t}\n\t\tif (path)\n\t\t\tloadTexture(path).then(tex => {\n\t\t\t\ttemplate.texture = tex;\n\t\t\t\ttemplate.data.texture = path;\n\t\t\t\ttemplate.refresh();\n\t\t\t})\n\t\ttemplate.item = item;\n\t\treturn template;\n\t}\n\n\t//  rather ugly, maybe find a better way at some point :shrug:\n\tconst origPrevListeners = AbilityTemplate.prototype.activatePreviewListeners.toString();\n\tconst newFun = origPrevListeners.replace(/this\\.refresh\\(\\)\\;/, \n\t\t\t\t// get targets\n\t\t\t\t\t`this.refresh();\n\t\t\t\t\tthis.getTargets(this);\n\t\t\t\t`);\n\n\tAbilityTemplate.prototype.getTargets = getTargets;\n\tAbilityTemplate.prototype.isTokenInside = isTokenInside;\n\n\tAbilityTemplate.prototype.activatePreviewListeners = Function(`\"use strict\"; return ( function ${newFun} )`)();\n}\n\nasync function itemHook(app, html) {\n\tconst div = document.createElement('div');\n\tdiv.classList.add('form-group');\n\tdiv.appendChild(document.createElement('label')).innerText = 'Template Texture';\n\tconst formField = div.appendChild(document.createElement('div'));\n\tformField.classList.add('form-fields');\n\tconst inp = formField.appendChild(document.createElement('input'));\n\tinp.dataset.dtype = 'String';\n\tinp.type = 'text';\n\tinp.name = 'flags.mess.templateTexture';\n\tinp.value = app.object.getFlag('mess', 'templateTexture') || \"\";\n\n\tformField.insertAdjacentHTML('beforeend', `\n\t\t<button type=\"button\" class=\"file-picker\" data-type=\"imagevideo\" data-target=\"flags.mess.templateTexture\" title=\"Browse Files\" tabindex=\"-1\">\n\t\t\t<i class=\"fas fa-file-import fa-fw\"></i>\n\t\t</button>\n\t`);\n\tconst button = formField.querySelector('button');\n\tbutton.style.flex = '0';\n\tapp._activateFilePicker(button);\n\thtml[0].querySelector('[name=\"data.target.units\"]').closest('.form-group').after(div);\n}\n\nasync function rollD20(data) {\n\t// Get the Actor from a synthetic Token\n\t// const actor = this;\n\n\tlet adv = getAdvantageSettings();\n\t// Determine the d20 roll and modifiers\n\tlet nd = 1;\n\tlet mods = data.halflingLucky ? \"r=1\" : \"\";\n\n\t// Handle advantage\n\tif ( adv === \"advantage\" ) {\n\t\tnd = data.elvenAccuracy ? 3 : 2;\n\t\tmods += \"kh\";\n\t\tdata.title += ` (${game.i18n.localize(\"DND5E.Advantage\")})`;\n\t}\n\n\t// Handle disadvantage\n\telse if ( adv === \"disadvantage\" ) {\n\t\tnd = 2;\n\t\tmods += \"kl\";\n\t\tdata.title += ` (${game.i18n.localize(\"DND5E.Disadvantage\")})`;\n\t}\n\n\t// Include the d20 roll\n\tlet diceFormula = `${nd}d20${mods}`;\n\tif (data.reliableTalent) diceFormula = `{${nd}d20${mods},10}kh`;\n\tdata.parts.unshift(diceFormula);\n\n\tconst d20Mod = getD20Modifier();\n\tif (d20Mod)\n\t\tdata.parts.push(d20Mod);\n\t\n\tlet r = new Roll(data.parts.join('+'), data);\n\tr.roll();\n\tconst d20 = r.parts[0].total;\n\tlet templateData = {...data, \n\t\ttooltip: await r.getTooltip(),\n\t\troll: r,\n\t\tcrit:  d20 >= 20,\n\t\tfumble: d20 <= 1\n\t}\n\n\tconst template = await renderTemplate('modules/mess/templates/roll-card.html', templateData);\n\n\tlet chatData = {\n\t\tuser: game.user._id,\n\t\ttype: CONST.CHAT_MESSAGE_TYPES.OTHER,\n\t\tcontent: template,\n\t\tspeaker: {\n\t\t\tactor: this,\n\t\t\talias: this.name\n\t\t}\n\t};\n\tlet rollMode = game.settings.get(\"core\", \"rollMode\");\n\tif ( [\"gmroll\", \"blindroll\"].includes(rollMode) ) chatData[\"whisper\"] = ChatMessage.getWhisperIDs(\"GM\");\n\tif ( rollMode === \"blindroll\" ) chatData[\"blind\"] = true;\n\n\tChatMessage.create(chatData);\n}\n\nasync function actorSheetHook(app, html, data) {\n\t// TODO: Redo this with proper methods... this currently ignores the cool new modifier field\n\t// maybe just ignore replace the abilitysave etc functions\n\tconst abilityMods = html[0].querySelectorAll('.ability-mod, .ability-name');\n\t$(abilityMods).off(); // find smth better here!\n\tabilityMods.forEach(e => e.addEventListener('click', function(ev) {\n\t\tev.stopPropagation();\n\t\tev.preventDefault();\n\n\t\tconst abilityId = ev.currentTarget.closest('.ability').dataset.ability;\n\t\tconst label = CONFIG.DND5E.abilities[abilityId];\n    const abl = app.object.data.data.abilities[abilityId];\n    const parts = [\"@mod\"];\n    const data = {mod: abl.mod};\n    const feats = app.object.data.flags.dnd5e || {};\n\n    // Add feat-related proficiency bonuses\n    if ( feats.remarkableAthlete && DND5E.characterFlags.remarkableAthlete.abilities.includes(abilityId) ) {\n      parts.push(\"@proficiency\");\n      data.proficiency = Math.ceil(0.5 * this.data.data.attributes.prof);\n    }\n    else if ( feats.jackOfAllTrades ) {\n      parts.push(\"@proficiency\");\n      data.proficiency = Math.floor(0.5 * this.data.data.attributes.prof);\n    }\n\n    // Add global actor bonus\n    let actorBonus = getProperty(app.object.data.data.bonuses, \"abilities.check\");\n    if ( !!actorBonus ) {\n      parts.push(\"@checkBonus\");\n      data.checkBonus = actorBonus;\n\t\t}\n\t\t\n\t\tdata.parts = parts;\n\n\t\tdata.title = game.i18n.format(\"DND5E.AbilityPromptTitle\", {ability: label});\n\n\t\trollD20.bind(app.object)(data);\n\t\treturn true;\n\t}));\n\tconst saveMods = html[0].querySelectorAll('.ability-save');\n\tsaveMods.forEach(e => e.addEventListener('click', function(ev) {\n\t\tev.stopPropagation();\n\t\tev.preventDefault();\n\t\tconst abilityId = ev.currentTarget.closest('.ability').dataset.ability;\n\t\tconst label = CONFIG.DND5E.abilities[abilityId];\n    const abl = app.object.data.data.abilities[abilityId];\n    const parts = [\"@mod\"];\n    const data = {mod: abl.mod};\n\n    // Include proficiency bonus\n    if ( abl.prof > 0 ) {\n      parts.push(\"@prof\");\n      data.prof = abl.prof;\n    }\n\n    // Include a global actor ability save bonus\n    const actorBonus = getProperty(app.object.data.data.bonuses, \"abilities.save\");\n    if ( !!actorBonus ) {\n      parts.push(\"@saveBonus\");\n      data.saveBonus = actorBonus;\n    }\n\t\tdata.title = game.i18n.format(\"DND5E.SavePromptTitle\", {ability: label});\n\t\tdata.parts = parts;\n\t\trollD20.bind(app.object)(data);\n\t}));\n\n\tconst skills = html[0].querySelectorAll('.skill-name');\n\t$(skills).off();\n\tskills.forEach(e => e.addEventListener('click', function(ev) {\n\t\tev.stopPropagation();\n\t\tev.preventDefault();\n\t\tconst skillId = ev.currentTarget.closest('.skill').dataset.skill;\n\t\tconst skl = app.object.data.data.skills[skillId];\n\n    // Compose roll parts and data\n    const parts = [\"@mod\"];\n    const data = {mod: skl.mod + skl.prof};\n    if ( skl.bonus ) {\n      data[\"skillBonus\"] = skl.bonus;\n      parts.push(\"@skillBonus\");\n    }\n\n    // Reliable Talent applies to any skill check we have full or better proficiency in\n    const reliableTalent = (skl.value >= 1 && app.object.getFlag(\"dnd5e\", \"reliableTalent\"));\n\t\tdata.parts =  parts;\n\t\tdata.title = game.i18n.format(\"DND5E.SkillPromptTitle\", {skill: CONFIG.DND5E.skills[skillId]});\n\n\t\trollD20.bind(app.object)(data);\n\t\treturn false;\n\t}))\n}\n\n\nexport default async function modifyRolling() {\n\tgame.settings.register('mess', `${game.userId}.adv-selector`, {\n\t\tname: 'Mess - Advantage Selector',\n\t\tdefault: 'normal',\n\t\ttype: String,\n\t\tscope: 'user'\n\t});\n\tgame.settings.register('mess', `${game.userId}.autoroll-selector`, {\n\t\tname: 'Mess - Autoroll Selector',\n\t\tdefault: {hit: false, dmg: false},\n\t\ttype: Object,\n\t\tscope: 'user'\n\t});\n\n\t// possible that this function g ets called *after* chatLog creation, so check if its there already, and if yes work with the existing one.\n\t// this needs further investigating\n\tHooks.on('renderChatLog', async (app, html, data) => {\n\t\tconst div = await createControls();\n\t\tconst controls = html[0].querySelector('#chat-controls');\n\t\tcontrols.insertBefore(div, controls.childNodes[0]);\n\t});\n\n\t// roundabout way to get the listener do what *I* want...\n\t// Since adding my own listener in renderChatLog was \"to early\".\n\tCONFIG.Item.entityClass.chatListeners = function (html) {\n    html.on('click', '.card-buttons button', onChatCardAction.bind(this));\n\t\thtml.on('click', '.item-name', this._onChatCardToggleContent.bind(this));\n\t\t\n\t\t// lets just use this for even more listeners\n\t\thtml.on('mouseenter', '.mess-chat-target', onMouseEnterTarget);\n\t\thtml.on('mouseleave', '.mess-chat-target', onMouseLeaveTarget);\n\t\thtml.on('dblclick', '.mess-chat-target', onDblClickTarget);\n\n\t\thtml.on('click', '.mess-button-to-hit', rollHit);\n\t\thtml.on('click', '.mess-button-dmg', rollDmg);\n\t}\n\n\tHooks.on('preCreateChatMessage', async (data) => {\n\t\tconst div = document.createElement('div');\n\t\tdiv.insertAdjacentHTML('afterbegin',  data.content);\n\t\tlet btn = div.querySelector('button[data-action=\"attack\"]');\n\t\tif (!btn) {\n\t\t\tbtn = div.querySelector('button[data-action=\"damage\"]');\n\t\t}\n\t\tif (btn)\n\t\t\trenderAttack({currentTarget: btn});\n\n\t});\n\n\tHooks.on('renderItemSheet', itemHook)\n\n\tHooks.on('renderActorSheet', actorSheetHook)\n\n\tchangeAbilityTemplate();\n}\n"],"sourceRoot":""}